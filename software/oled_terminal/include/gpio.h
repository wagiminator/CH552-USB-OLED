// ===================================================================================
// GPIO Functions for CH55x
// ===================================================================================

#pragma once
#include "ch554.h"

// ===================================================================================
// Pin definitions
// ===================================================================================

// Enumerate pin designators (use these designators to define pins)
enum{P10, P11, P12, P13, P14, P15, P16, P17, P30, P31, P32, P33, P34, P35, P36, P37};

// Define pins for direct bit manipulation (these are for internal use only)
SBIT(P1_0, 0x90, 0);
SBIT(P1_1, 0x90, 1);
SBIT(P1_2, 0x90, 2);
SBIT(P1_3, 0x90, 3);
SBIT(P1_4, 0x90, 4);
SBIT(P1_5, 0x90, 5);
SBIT(P1_6, 0x90, 6);
SBIT(P1_7, 0x90, 7);
SBIT(P3_0, 0xB0, 0);
SBIT(P3_1, 0xB0, 1);
SBIT(P3_2, 0xB0, 2);
SBIT(P3_3, 0xB0, 3);
SBIT(P3_4, 0xB0, 4);
SBIT(P3_5, 0xB0, 5);
SBIT(P3_6, 0xB0, 6);
SBIT(P3_7, 0xB0, 7);

// ===================================================================================
// Set pin as INPUT (high impedance, no pullup)
// ===================================================================================
#define PIN_input(PIN) \
  ((PIN>=P10)&&(PIN<=P17) ? (P1_DIR_PU &= ~(1<<(PIN&7)), P1_MOD_OC &= ~(1<<(PIN&7))) : \
  ((PIN>=P30)&&(PIN<=P37) ? (P3_DIR_PU &= ~(1<<(PIN&7)), P3_MOD_OC &= ~(1<<(PIN&7))) : \
(0)))

// ===================================================================================
// Set pin as INPUT with internal PULLUP resistor (also open-drain output,
// when output changes from LOW to HIGH, it will drive HIGH for 2 clock cycles)
// ===================================================================================
#define PIN_input_PU(PIN) \
  ((PIN>=P10)&&(PIN<=P17) ? (P1_MOD_OC |= (1<<(PIN&7)), P1_DIR_PU |= (1<<(PIN&7))) : \
  ((PIN>=P30)&&(PIN<=P37) ? (P3_MOD_OC |= (1<<(PIN&7)), P3_DIR_PU |= (1<<(PIN&7))) : \
(0)))

// ===================================================================================
// Set pin as OUTPUT (push-pull)
// ===================================================================================
#define PIN_output(PIN) \
  ((PIN>=P10)&&(PIN<=P17) ? (P1_MOD_OC &= ~(1<<(PIN&7)), P1_DIR_PU |= (1<<(PIN&7))) : \
  ((PIN>=P30)&&(PIN<=P37) ? (P3_MOD_OC &= ~(1<<(PIN&7)), P3_DIR_PU |= (1<<(PIN&7))) : \
(0)))

// ===================================================================================
// Set pin as OPEN-DRAIN OUTPUT (also high-impedance input, no pullup)
// ===================================================================================
#define PIN_output_OD(PIN) \
  ((PIN>=P10)&&(PIN<=P17) ? (P1_MOD_OC |= (1<<(PIN&7)), P1_DIR_PU &= ~(1<<(PIN&7))) : \
  ((PIN>=P30)&&(PIN<=P37) ? (P3_MOD_OC |= (1<<(PIN&7)), P3_DIR_PU &= ~(1<<(PIN&7))) : \
(0)))

// ===================================================================================
// Set pin to LOW
// ===================================================================================
#define PIN_low(PIN) \
  (PIN == P10 ? (P1_0 = 0) : \
  (PIN == P11 ? (P1_1 = 0) : \
  (PIN == P12 ? (P1_2 = 0) : \
  (PIN == P13 ? (P1_3 = 0) : \
  (PIN == P14 ? (P1_4 = 0) : \
  (PIN == P15 ? (P1_5 = 0) : \
  (PIN == P16 ? (P1_6 = 0) : \
  (PIN == P17 ? (P1_7 = 0) : \
  (PIN == P30 ? (P3_0 = 0) : \
  (PIN == P31 ? (P3_1 = 0) : \
  (PIN == P32 ? (P3_2 = 0) : \
  (PIN == P33 ? (P3_3 = 0) : \
  (PIN == P34 ? (P3_4 = 0) : \
  (PIN == P35 ? (P3_5 = 0) : \
  (PIN == P36 ? (P3_6 = 0) : \
  (PIN == P37 ? (P3_7 = 0) : \
(0)))))))))))))))))

// ===================================================================================
// Set pin to HIGH
// ===================================================================================
#define PIN_high(PIN) \
  (PIN == P10 ? (P1_0 = 1) : \
  (PIN == P11 ? (P1_1 = 1) : \
  (PIN == P12 ? (P1_2 = 1) : \
  (PIN == P13 ? (P1_3 = 1) : \
  (PIN == P14 ? (P1_4 = 1) : \
  (PIN == P15 ? (P1_5 = 1) : \
  (PIN == P16 ? (P1_6 = 1) : \
  (PIN == P17 ? (P1_7 = 1) : \
  (PIN == P30 ? (P3_0 = 1) : \
  (PIN == P31 ? (P3_1 = 1) : \
  (PIN == P32 ? (P3_2 = 1) : \
  (PIN == P33 ? (P3_3 = 1) : \
  (PIN == P34 ? (P3_4 = 1) : \
  (PIN == P35 ? (P3_5 = 1) : \
  (PIN == P36 ? (P3_6 = 1) : \
  (PIN == P37 ? (P3_7 = 1) : \
(0)))))))))))))))))

// ===================================================================================
// TOGGLE pin
// ===================================================================================
#define PIN_toggle(PIN) \
  (PIN == P10 ? (P1_0 = !P1_0) : \
  (PIN == P11 ? (P1_1 = !P1_1) : \
  (PIN == P12 ? (P1_2 = !P1_2) : \
  (PIN == P13 ? (P1_3 = !P1_3) : \
  (PIN == P14 ? (P1_4 = !P1_4) : \
  (PIN == P15 ? (P1_5 = !P1_5) : \
  (PIN == P16 ? (P1_6 = !P1_6) : \
  (PIN == P17 ? (P1_7 = !P1_7) : \
  (PIN == P30 ? (P3_0 = !P3_0) : \
  (PIN == P31 ? (P3_1 = !P3_1) : \
  (PIN == P32 ? (P3_2 = !P3_2) : \
  (PIN == P33 ? (P3_3 = !P3_3) : \
  (PIN == P34 ? (P3_4 = !P3_4) : \
  (PIN == P35 ? (P3_5 = !P3_5) : \
  (PIN == P36 ? (P3_6 = !P3_6) : \
  (PIN == P37 ? (P3_7 = !P3_7) : \
(0)))))))))))))))))

// ===================================================================================
// READ pin
// ===================================================================================
#define PIN_read(PIN) \
  (PIN == P10 ? (P1_0) : \
  (PIN == P11 ? (P1_1) : \
  (PIN == P12 ? (P1_2) : \
  (PIN == P13 ? (P1_3) : \
  (PIN == P14 ? (P1_4) : \
  (PIN == P15 ? (P1_5) : \
  (PIN == P16 ? (P1_6) : \
  (PIN == P17 ? (P1_7) : \
  (PIN == P30 ? (P3_0) : \
  (PIN == P31 ? (P3_1) : \
  (PIN == P32 ? (P3_2) : \
  (PIN == P33 ? (P3_3) : \
  (PIN == P34 ? (P3_4) : \
  (PIN == P35 ? (P3_5) : \
  (PIN == P36 ? (P3_6) : \
  (PIN == P37 ? (P3_7) : \
(0)))))))))))))))))

// ===================================================================================
// WRITE pin
// ===================================================================================
#define PIN_write(PIN, val) \
  (PIN == P10 ? (P1_0 = val) : \
  (PIN == P11 ? (P1_1 = val) : \
  (PIN == P12 ? (P1_2 = val) : \
  (PIN == P13 ? (P1_3 = val) : \
  (PIN == P14 ? (P1_4 = val) : \
  (PIN == P15 ? (P1_5 = val) : \
  (PIN == P16 ? (P1_6 = val) : \
  (PIN == P17 ? (P1_7 = val) : \
  (PIN == P30 ? (P3_0 = val) : \
  (PIN == P31 ? (P3_1 = val) : \
  (PIN == P32 ? (P3_2 = val) : \
  (PIN == P33 ? (P3_3 = val) : \
  (PIN == P34 ? (P3_4 = val) : \
  (PIN == P35 ? (P3_5 = val) : \
  (PIN == P36 ? (P3_6 = val) : \
  (PIN == P37 ? (P3_7 = val) : \
(0)))))))))))))))))

// ===================================================================================
// (PORT, PIN) manipulation macros
// ===================================================================================
#define PORT_input(PORT, PIN)     (P##PORT##_DIR_PU &= ~(1<<PIN), P##PORT##_MOD_OC &= ~(1<<PIN))
#define PORT_input_PU(PORT, PIN)  (P##PORT##_MOD_OC |=  (1<<PIN), P##PORT##_DIR_PU |=  (1<<PIN))
#define PORT_output(PORT, PIN)    (P##PORT##_MOD_OC &= ~(1<<PIN), P##PORT##_DIR_PU |=  (1<<PIN))
#define PORT_output_OD(PORT, PIN) (P##PORT##_MOD_OC |=  (1<<PIN), P##PORT##_DIR_PU &= ~(1<<PIN))

#define PORT_low(PORT, PIN)       P##PORT##_##PIN = 0
#define PORT_high(PORT, PIN)      P##PORT##_##PIN = 1
#define PORT_toggle(PORT, PIN)    P##PORT##_##PIN = !P##PORT##_##PIN
#define PORT_read(PORT, PIN)      (P##PORT##_##PIN)
